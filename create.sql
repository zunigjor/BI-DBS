-- Generated by Oracle SQL Developer Data Modeler 17.4.0.355.2131
--   at:        2018-05-05 15:08:19 GMT+01:00
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g

prompt #---------------------#
prompt #- Pomocne procedury -#
prompt #---------------------#

create or replace procedure SMAZ_VSECHNY_TABULKY AS
-- pokud v logu bude uvedeno, ze nektery objekt nebyl zrusen, protoze na nej jiny jeste existujici objekt stavi, spust proceduru opakovane, dokud se nezrusi vse
begin
  for iRec in 
    (select distinct OBJECT_TYPE, OBJECT_NAME,
      'drop '||OBJECT_TYPE||' "'||OBJECT_NAME||'"'||
      case OBJECT_TYPE when 'TABLE' then ' cascade constraints purge' else ' ' end as PRIKAZ
    from USER_OBJECTS where OBJECT_NAME not in ('SMAZ_VSECHNY_TABULKY', 'VYPNI_CIZI_KLICE', 'ZAPNI_CIZI_KLICE', 'VYMAZ_DATA_VSECH_TABULEK')
    ) loop
        begin
          dbms_output.put_line('Prikaz: '||irec.prikaz);
        execute immediate iRec.prikaz;
        exception
          when others then dbms_output.put_line('NEPOVEDLO SE!');
        end;
      end loop;
end;
/

create or replace procedure VYPNI_CIZI_KLICE as 
begin
  for cur in (select CONSTRAINT_NAME, TABLE_NAME from USER_CONSTRAINTS where CONSTRAINT_TYPE = 'R' ) 
  loop
    execute immediate 'alter table '||cur.TABLE_NAME||' modify constraint "'||cur.CONSTRAINT_NAME||'" DISABLE';
  end loop;
end VYPNI_CIZI_KLICE;
/


create or replace procedure ZAPNI_CIZI_KLICE as 
begin
  for cur in (select CONSTRAINT_NAME, TABLE_NAME from USER_CONSTRAINTS where CONSTRAINT_TYPE = 'R' ) 
  loop
    execute immediate 'alter table '||cur.TABLE_NAME||' modify constraint "'||cur.CONSTRAINT_NAME||'" enable validate';
  end loop;
end ZAPNI_CIZI_KLICE;
/

create or replace procedure VYMAZ_DATA_VSECH_TABULEK is
begin
  -- Vymazat data vsech tabulek
  VYPNI_CIZI_KLICE;
  for v_rec in (select distinct TABLE_NAME from USER_TABLES)
  loop
    execute immediate 'truncate table '||v_rec.TABLE_NAME||' drop storage';
  end loop;
  ZAPNI_CIZI_KLICE;
  
  -- Nastavit vsechny sekvence od 1
  for v_rec in (select distinct SEQUENCE_NAME  from USER_SEQUENCES)
  loop
    execute immediate 'alter sequence '||v_rec.SEQUENCE_NAME||' restart start with 1';
  end loop;
end VYMAZ_DATA_VSECH_TABULEK;
/

prompt #------------------------#
prompt #- Zrusit stare tabulky -#
prompt #------------------------#

exec SMAZ_VSECHNY_TABULKY;

prompt #-------------------------#
prompt #- Vytvorit nove tabulky -#
prompt #-------------------------#
-- Generated by Oracle SQL Developer Data Modeler 17.4.0.355.2131
--   at:        2018-05-05 15:08:19 GMT+01:00
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g

prompt #---------------------#
prompt #- Pomocne procedury -#
prompt #---------------------#

create or replace procedure SMAZ_VSECHNY_TABULKY AS
-- pokud v logu bude uvedeno, ze nektery objekt nebyl zrusen, protoze na nej jiny jeste existujici objekt stavi, spust proceduru opakovane, dokud se nezrusi vse
begin
  for iRec in 
    (select distinct OBJECT_TYPE, OBJECT_NAME,
      'drop '||OBJECT_TYPE||' "'||OBJECT_NAME||'"'||
      case OBJECT_TYPE when 'TABLE' then ' cascade constraints purge' else ' ' end as PRIKAZ
    from USER_OBJECTS where OBJECT_NAME not in ('SMAZ_VSECHNY_TABULKY', 'VYPNI_CIZI_KLICE', 'ZAPNI_CIZI_KLICE', 'VYMAZ_DATA_VSECH_TABULEK')
    ) loop
        begin
          dbms_output.put_line('Prikaz: '||irec.prikaz);
        execute immediate iRec.prikaz;
        exception
          when others then dbms_output.put_line('NEPOVEDLO SE!');
        end;
      end loop;
end;
/

create or replace procedure VYPNI_CIZI_KLICE as 
begin
  for cur in (select CONSTRAINT_NAME, TABLE_NAME from USER_CONSTRAINTS where CONSTRAINT_TYPE = 'R' ) 
  loop
    execute immediate 'alter table '||cur.TABLE_NAME||' modify constraint "'||cur.CONSTRAINT_NAME||'" DISABLE';
  end loop;
end VYPNI_CIZI_KLICE;
/


create or replace procedure ZAPNI_CIZI_KLICE as 
begin
  for cur in (select CONSTRAINT_NAME, TABLE_NAME from USER_CONSTRAINTS where CONSTRAINT_TYPE = 'R' ) 
  loop
    execute immediate 'alter table '||cur.TABLE_NAME||' modify constraint "'||cur.CONSTRAINT_NAME||'" enable validate';
  end loop;
end ZAPNI_CIZI_KLICE;
/

create or replace procedure VYMAZ_DATA_VSECH_TABULEK is
begin
  -- Vymazat data vsech tabulek
  VYPNI_CIZI_KLICE;
  for v_rec in (select distinct TABLE_NAME from USER_TABLES)
  loop
    execute immediate 'truncate table '||v_rec.TABLE_NAME||' drop storage';
  end loop;
  ZAPNI_CIZI_KLICE;
  
  -- Nastavit vsechny sekvence od 1
  for v_rec in (select distinct SEQUENCE_NAME  from USER_SEQUENCES)
  loop
    execute immediate 'alter sequence '||v_rec.SEQUENCE_NAME||' restart start with 1';
  end loop;
end VYMAZ_DATA_VSECH_TABULEK;
/

prompt #------------------------#
prompt #- Zrusit stare tabulky -#
prompt #------------------------#

exec SMAZ_VSECHNY_TABULKY;

prompt #-------------------------#
prompt #- Vytvorit nove tabulky -#
prompt #-------------------------#
-- Generated by Oracle SQL Developer Data Modeler 17.4.0.355.2131
--   at:        2018-05-05 16:39:13 GMT+01:00
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



CREATE TABLE address (
    building_number      VARCHAR2(10 CHAR) NOT NULL,
    city                 VARCHAR2(30 CHAR) NOT NULL,
    postal_code          VARCHAR2(20 CHAR),
    street               VARCHAR2(30 CHAR) NOT NULL,
    address_id           INTEGER NOT NULL,
    country_country_id   INTEGER NOT NULL
);

ALTER TABLE address ADD CONSTRAINT address_pk PRIMARY KEY ( address_id );

CREATE TABLE car (
    registration_number   INTEGER NOT NULL,
    brand                 VARCHAR2(30 CHAR) NOT NULL,
    car_country           VARCHAR2(50 CHAR) NOT NULL,
    colour                VARCHAR2(30 BYTE) NOT NULL,
    car_type              VARCHAR2(30 CHAR) NOT NULL
);

ALTER TABLE car ADD CONSTRAINT car_pk PRIMARY KEY ( registration_number );

CREATE TABLE country (
    country_name   VARCHAR2(50 CHAR) NOT NULL,
    country_id     INTEGER NOT NULL
);

ALTER TABLE country ADD CONSTRAINT country_pk PRIMARY KEY ( country_id );

CREATE TABLE customer (
    email        VARCHAR2(40 CHAR) NOT NULL,
    first_name   VARCHAR2(30 CHAR) NOT NULL,
    surname      VARCHAR2(30 CHAR) NOT NULL,
    tel_number   INTEGER NOT NULL
);

ALTER TABLE customer ADD CONSTRAINT customer_pk PRIMARY KEY ( email );

CREATE TABLE employee (
    employee_id              INTEGER NOT NULL,
    age                      INTEGER NOT NULL,
    evaluation_czk           INTEGER NOT NULL,
    first_name               VARCHAR2(30 CHAR) NOT NULL,
    surname                  VARCHAR2(30 CHAR) NOT NULL,
    local_office_office_id   INTEGER NOT NULL,
    emp_position             VARCHAR2(30 CHAR) NOT NULL
);

ALTER TABLE employee ADD CONSTRAINT employee_pk PRIMARY KEY ( employee_id );

CREATE TABLE local_office (
    office_id            INTEGER NOT NULL,
    address_address_id   INTEGER NOT NULL
);

CREATE UNIQUE INDEX local_office__idx ON
    local_office ( address_address_id ASC );

ALTER TABLE local_office ADD CONSTRAINT local_office_pk PRIMARY KEY ( office_id );

CREATE TABLE office_manager (
    employee_employee_id   INTEGER NOT NULL,
    university_degree      VARCHAR2(40 CHAR) NOT NULL,
    employee_id            INTEGER NOT NULL
);

CREATE UNIQUE INDEX office_manager__idx ON
    office_manager ( employee_employee_id ASC );

ALTER TABLE office_manager ADD CONSTRAINT office_manager_pk PRIMARY KEY ( employee_id );

CREATE TABLE order_in (
    car_recieved   CHAR(1),
    order_id       INTEGER NOT NULL
);

ALTER TABLE order_in ADD CONSTRAINT order_in_pk PRIMARY KEY ( order_id );

CREATE TABLE order_out (
    car_sent             CHAR(1),
    address_address_id   INTEGER NOT NULL,
    order_id             INTEGER NOT NULL
);

ALTER TABLE order_out ADD CONSTRAINT order_out_pk PRIMARY KEY ( order_id );

CREATE TABLE order_t (
    order_date                DATE NOT NULL,
    local_office_office_id    INTEGER NOT NULL,
    customer_email            VARCHAR2(40 CHAR) NOT NULL,
    price                     INTEGER NOT NULL,
    order_id                  INTEGER NOT NULL,
    car_registration_number   INTEGER NOT NULL,
    order_t_type              VARCHAR2(9) NOT NULL
);

ALTER TABLE order_t
    ADD CONSTRAINT ch_inh_order CHECK ( order_t_type IN (
        'Order_T',
        'Order_in',
        'Order_out'
    ) );

ALTER TABLE order_t ADD CONSTRAINT order_t_pk PRIMARY KEY ( order_id );

CREATE TABLE relation_12 (
    customer_email            VARCHAR2(40 CHAR) NOT NULL,
    car_registration_number   INTEGER NOT NULL
);

ALTER TABLE relation_12 ADD CONSTRAINT relation_12_pk PRIMARY KEY ( customer_email,
car_registration_number );

CREATE TABLE shop_assistant (
    employee_employee_id    INTEGER NOT NULL,
    high_school_completed   VARCHAR2(40 CHAR) NOT NULL,
    employee_id             INTEGER NOT NULL
);

CREATE UNIQUE INDEX shop_assistant__idx ON
    shop_assistant ( employee_employee_id ASC );

ALTER TABLE shop_assistant ADD CONSTRAINT shop_assistant_pk PRIMARY KEY ( employee_id );

CREATE TABLE space_guard (
    employee_employee_id   INTEGER NOT NULL,
    weapon_passport_num    INTEGER NOT NULL,
    employee_id            INTEGER NOT NULL
);

CREATE UNIQUE INDEX space_guard__idx ON
    space_guard ( employee_employee_id ASC );

ALTER TABLE space_guard ADD CONSTRAINT space_guard_pk PRIMARY KEY ( employee_id );

ALTER TABLE address
    ADD CONSTRAINT address_country_fk FOREIGN KEY ( country_country_id )
        REFERENCES country ( country_id );

ALTER TABLE employee
    ADD CONSTRAINT employee_local_office_fk FOREIGN KEY ( local_office_office_id )
        REFERENCES local_office ( office_id );

ALTER TABLE local_office
    ADD CONSTRAINT local_office_address_fk FOREIGN KEY ( address_address_id )
        REFERENCES address ( address_id );

ALTER TABLE office_manager
    ADD CONSTRAINT office_manager_employee_fk FOREIGN KEY ( employee_employee_id )
        REFERENCES employee ( employee_id );

ALTER TABLE order_in
    ADD CONSTRAINT order_in_order_fk FOREIGN KEY ( order_id )
        REFERENCES order_t ( order_id );

ALTER TABLE order_out
    ADD CONSTRAINT order_out_address_fk FOREIGN KEY ( address_address_id )
        REFERENCES address ( address_id );

ALTER TABLE order_out
    ADD CONSTRAINT order_out_order_fk FOREIGN KEY ( order_id )
        REFERENCES order_t ( order_id );

ALTER TABLE order_t
    ADD CONSTRAINT order_t_car_fk FOREIGN KEY ( car_registration_number )
        REFERENCES car ( registration_number );

ALTER TABLE order_t
    ADD CONSTRAINT order_t_customer_fk FOREIGN KEY ( customer_email )
        REFERENCES customer ( email );

ALTER TABLE order_t
    ADD CONSTRAINT order_t_local_office_fk FOREIGN KEY ( local_office_office_id )
        REFERENCES local_office ( office_id );

ALTER TABLE relation_12
    ADD CONSTRAINT relation_12_car_fk FOREIGN KEY ( car_registration_number )
        REFERENCES car ( registration_number );

ALTER TABLE relation_12
    ADD CONSTRAINT relation_12_customer_fk FOREIGN KEY ( customer_email )
        REFERENCES customer ( email );

ALTER TABLE shop_assistant
    ADD CONSTRAINT shop_assistant_employee_fk FOREIGN KEY ( employee_employee_id )
        REFERENCES employee ( employee_id );

ALTER TABLE space_guard
    ADD CONSTRAINT space_guard_employee_fk FOREIGN KEY ( employee_employee_id )
        REFERENCES employee ( employee_id );

CREATE OR REPLACE TRIGGER arc_fkarc_1_order_out BEFORE
    INSERT OR UPDATE OF order_id ON order_out
    FOR EACH ROW
DECLARE
    d   VARCHAR2(9);
BEGIN
    SELECT
        a.order_t_type
    INTO
        d
    FROM
        order_t a
    WHERE
        a.order_id =:new.order_id;

    IF
        ( d IS NULL OR d <> 'Order_out' )
    THEN
        raise_application_error(-20223,'FK Order_out_Order_FK in Table Order_out violates Arc constraint on Table Order_T - discriminator column Order_T_TYPE doesn''t have value ''Order_out'''
);
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_1_order_in BEFORE
    INSERT OR UPDATE OF order_id ON order_in
    FOR EACH ROW
DECLARE
    d   VARCHAR2(9);
BEGIN
    SELECT
        a.order_t_type
    INTO
        d
    FROM
        order_t a
    WHERE
        a.order_id =:new.order_id;

    IF
        ( d IS NULL OR d <> 'Order_in' )
    THEN
        raise_application_error(-20223,'FK Order_in_Order_FK in Table Order_in violates Arc constraint on Table Order_T - discriminator column Order_T_TYPE doesn''t have value ''Order_in'''
);
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_arc_1_space_guard BEFORE
    INSERT OR UPDATE OF employee_employee_id ON space_guard
    FOR EACH ROW
DECLARE
    d   VARCHAR2(30 CHAR);
BEGIN
    SELECT
        a.emp_position
    INTO
        d
    FROM
        employee a
    WHERE
        a.employee_id =:new.employee_employee_id;

    IF
        ( d IS NULL OR d <> 'SPACE_GUARD' )
    THEN
        raise_application_error(-20223,'FK Space_guard_Employee_FK in Table Space_guard violates Arc constraint on Table Employee - discriminator column EMP_Position doesn''t have value ''EMP_Position'''
);
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_arc_1_shop_assistant BEFORE
    INSERT OR UPDATE OF employee_employee_id ON shop_assistant
    FOR EACH ROW
DECLARE
    d   VARCHAR2(30 CHAR);
BEGIN
    SELECT
        a.emp_position
    INTO
        d
    FROM
        employee a
    WHERE
        a.employee_id =:new.employee_employee_id;

    IF
        ( d IS NULL OR d <> 'SHOP_ASSISTANT' )
    THEN
        raise_application_error(-20223,'FK Shop_assistant_Employee_FK in Table Shop_assistant violates Arc constraint on Table Employee - discriminator column EMP_Position doesn''t have value ''EMP_Position'''
);
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_arc_1_office_manager BEFORE
    INSERT OR UPDATE OF employee_employee_id ON office_manager
    FOR EACH ROW
DECLARE
    d   VARCHAR2(30 CHAR);
BEGIN
    SELECT
        a.emp_position
    INTO
        d
    FROM
        employee a
    WHERE
        a.employee_id =:new.employee_employee_id;

    IF
        ( d IS NULL OR d <> 'OFFICE_MANAGER' )
    THEN
        raise_application_error(-20223,'FK Office_manager_Employee_FK in Table Office_manager violates Arc constraint on Table Employee - discriminator column EMP_Position doesn''t have value ''EMP_Position'''
);
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE SEQUENCE address_address_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER address_address_id_trg BEFORE
    INSERT ON address
    FOR EACH ROW
    WHEN ( new.address_id IS NULL )
BEGIN
    :new.address_id := address_address_id_seq.nextval;
END;
/

CREATE SEQUENCE employee_employee_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER employee_employee_id_trg BEFORE
    INSERT ON employee
    FOR EACH ROW
    WHEN ( new.employee_id IS NULL )
BEGIN
    :new.employee_id := employee_employee_id_seq.nextval;
END;
/

CREATE SEQUENCE local_office_office_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER local_office_office_id_trg BEFORE
    INSERT ON local_office
    FOR EACH ROW
    WHEN ( new.office_id IS NULL )
BEGIN
    :new.office_id := local_office_office_id_seq.nextval;
END;
/

CREATE SEQUENCE order_t_order_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER order_t_order_id_trg BEFORE
    INSERT ON order_t
    FOR EACH ROW
    WHEN ( new.order_id IS NULL )
BEGIN
    :new.order_id := order_t_order_id_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            13
-- CREATE INDEX                             4
-- ALTER TABLE                             28
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           9
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          4
-- CREATE MATERIALIZED VIEW                 0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0